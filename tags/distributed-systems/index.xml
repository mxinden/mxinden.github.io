<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Distributed-Systems on Max Inden</title>
    <link>https://max-inden.de/tags/distributed-systems/</link>
    <description>Recent content in Distributed-Systems on Max Inden</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 06 Mar 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://max-inden.de/tags/distributed-systems/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hole punching in libp2p</title>
      <link>https://max-inden.de/post/2022-03-06-libp2p-hole-punching/</link>
      <pubDate>Sun, 06 Mar 2022 00:00:00 +0000</pubDate>
      <guid>https://max-inden.de/post/2022-03-06-libp2p-hole-punching/</guid>
      <description>&lt;p&gt;We have been working on hole punching support in libp2p for the last year. It
finally landed in the Go and Rust libp2p implementation.&lt;/p&gt;
&lt;p&gt;Read all about it on the IPFS blog:
&lt;a href=&#34;https://blog.ipfs.io/2022-01-20-libp2p-hole-punching/&#34;&gt;https://blog.ipfs.io/2022-01-20-libp2p-hole-punching/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>35th DistSys Reading Group - Nym</title>
      <link>https://max-inden.de/post/2021-06-29-35th-reading-group/</link>
      <pubDate>Tue, 29 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://max-inden.de/post/2021-06-29-35th-reading-group/</guid>
      <description>&lt;p&gt;In our previous session we looked into Mixnets, more specifically Loopix. With
this session we stayed in the space, talking about a network adopting many
concepts from Loopix, namely Nym.&lt;/p&gt;
&lt;p&gt;As a preparation, we read section 1 through 4  of the Nym whitepaper.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Introduction&lt;/li&gt;
&lt;li&gt;Network-level surveillance&lt;/li&gt;
&lt;li&gt;The Nym Network Design&lt;/li&gt;
&lt;li&gt;Mixnet for Network-Level Privacy&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Diaz, Claudia, Harry Halpin, and Aggelos Kiayias. &amp;ldquo;The Nym Network.&amp;rdquo; (2021).&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://nymtech.net/nym-whitepaper.pdf&#34;&gt;https://nymtech.net/nym-whitepaper.pdf&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>34th DistSys Reading Group - Mixnets</title>
      <link>https://max-inden.de/post/2021-05-10-34th-reading-group/</link>
      <pubDate>Mon, 10 May 2021 00:00:00 +0000</pubDate>
      <guid>https://max-inden.de/post/2021-05-10-34th-reading-group/</guid>
      <description>&lt;p&gt;34th session was on Mixnets as lots of people suggested in the past. As a
preparation we read the Loopix paper.&lt;/p&gt;
&lt;p&gt;Piotrowska, Ania M., et al. &amp;ldquo;The loopix anonymity system.&amp;rdquo; 26th {USENIX}
Security Symposium ({USENIX} Security 17). 2017.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.usenix.org/system/files/conference/usenixsecurity17/sec17-piotrowska.pdf&#34;&gt;https://www.usenix.org/system/files/conference/usenixsecurity17/sec17-piotrowska.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The corresponding talk by Ania Piotrowska is very much worth watching as an
additional resource.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=R-yEqLX_UvI&#34;&gt;https://www.youtube.com/watch?v=R-yEqLX_UvI&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>33rd DistSys Reading Group - BGP 3</title>
      <link>https://max-inden.de/post/2021-04-12-33rd-reading-group/</link>
      <pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://max-inden.de/post/2021-04-12-33rd-reading-group/</guid>
      <description>&lt;p&gt;In our third BGP session we focused on BGP security, more specifically we
discussed how to perform hijack and interception attacks using BGP. The primary
paper of the session was:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cs.princeton.edu/~jrex/papers/sico19.pdf&#34;&gt;Birge-Lee, Henry, et al. &amp;ldquo;Sico: Surgical interception attacks by manipulating
bgp communities.&amp;rdquo; Proceedings of the 2019 ACM SIGSAC Conference on Computer and
Communications Security. 2019.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A good introduction to RPKI can be found
&lt;a href=&#34;https://rpki.readthedocs.io/en/latest/rpki/introduction.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>32nd DistSys Reading Group - BGP 2</title>
      <link>https://max-inden.de/post/2021-03-18-32nd-reading-group/</link>
      <pubDate>Thu, 18 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://max-inden.de/post/2021-03-18-32nd-reading-group/</guid>
      <description>&lt;p&gt;After our first BGP session, introducing the protocol based on the convergence
problem of BGP, our second session on BGP covered route propagation and tuning.
The primary paper was:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ilab-pub.imp.fu-berlin.de/papers/gmbpr-bbntb-20.pdf&#34;&gt;Gray, Caitlin, et al. &amp;ldquo;BGP Beacons, Network Tomography, and Bayesian
Computation to Locate Route Flap Damping.&amp;rdquo; Proceedings of the ACM Internet
Measurement Conference.
2020.&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>31st DistSys Reading Group - BGP 1</title>
      <link>https://max-inden.de/post/2021-02-24-31st-paper-club/</link>
      <pubDate>Wed, 24 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://max-inden.de/post/2021-02-24-31st-paper-club/</guid>
      <description>&lt;p&gt;We decided to turn our interest to BGP which we will devote 3 sessions to. In
today&amp;rsquo;s session - the first one - we introduced BGP, looked at the convergence
problem, as well as the solution suggested in the paper below.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cs.princeton.edu/~jrex/papers/sigmetrics00.long.pdf&#34;&gt;Gao, Lixin, and Jennifer Rexford. &amp;ldquo;Stable Internet routing without global
coordination.&amp;rdquo; IEEE/ACM Transactions on networking 9.6 (2001):
681-692.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To play around with BGP as well as general Internet routing:&lt;/p&gt;</description>
    </item>
    <item>
      <title>30th DistSys Reading Group - NTP</title>
      <link>https://max-inden.de/post/2021-01-26-30th-paper-club/</link>
      <pubDate>Tue, 26 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://max-inden.de/post/2021-01-26-30th-paper-club/</guid>
      <description>&lt;p&gt;What better way to start a new year than with a paper discussing how to change
time?&lt;/p&gt;
&lt;p&gt;In the 30th session we discussed a paper which I think has much up its sleeves -
&lt;em&gt;Attacking the Network Time Protocol&lt;/em&gt;. First off the paper gives us a good
introduction to the inner working of the network time protocol. Next up it
examines the broader ecosystem as well as why we need accurate time in the first
place. Once we established enough background, the paper dives into how one can
attack the protocol, starting off with on-path attacks all the way to some crazy
(creative) off-path attacks. Last but not least, the list of references at the
end is a small treasure trove.&lt;/p&gt;</description>
    </item>
    <item>
      <title>28th DistSys Reading Group - Hotstuff</title>
      <link>https://max-inden.de/post/2020-09-08-28th-paper-club/</link>
      <pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://max-inden.de/post/2020-09-08-28th-paper-club/</guid>
      <description>&lt;p&gt;With the 28th session we jumped into the space of byzantine fault tolerant
consensus protocols. We covered fault tolerant consensus with various Paxos
variants in the past, but this session was the first one looking into how to
solve the &lt;a href=&#34;https://en.wikipedia.org/wiki/Byzantine_fault&#34;&gt;byzantine generals
problem&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Instead of using PBFT [1] as a first paper we went with Hotstuff [2] instead.
The reasoning behind this choice was (a) Hotstuff presenting a somewhat easy
up-to-date consensus algorithm and (b) that it provides a framework enabling one
to compare other algorithms (e.g. PBFT) in the space.&lt;/p&gt;</description>
    </item>
    <item>
      <title>26th DistSys Reading Group - Cache coherence</title>
      <link>https://max-inden.de/post/2020-05-18-26th-paper-club/</link>
      <pubDate>Mon, 18 May 2020 00:00:00 +0000</pubDate>
      <guid>https://max-inden.de/post/2020-05-18-26th-paper-club/</guid>
      <description>&lt;p&gt;We have long been planning to cover the caching mechanisms in CPUs. As a shared
knowledge base for the discussions in this session we chose the following two
articles by Martin Thompson among other things known for his work on the &lt;a href=&#34;https://lmax-exchange.github.io/disruptor/&#34;&gt;LMAX
Disruptor&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mechanical-sympathy.blogspot.com/2013/02/cpu-cache-flushing-fallacy.html&#34;&gt;CPU Cache Flushing
Fallacy&lt;/a&gt;
including a good overview over the different caches in modern Intel CPUs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mechanical-sympathy.blogspot.com/2011/07/write-combining.html&#34;&gt;Write
Combining&lt;/a&gt;
exemplifying the advanced mechanisms one can find in today&amp;rsquo;s CPUs and how one
can make use of them.&lt;/p&gt;</description>
    </item>
    <item>
      <title>25th DistSys Reading Group - Fair queuing</title>
      <link>https://max-inden.de/post/2020-04-27-25th-paper-club/</link>
      <pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://max-inden.de/post/2020-04-27-25th-paper-club/</guid>
      <description>&lt;p&gt;In the session today we covered Madhavapeddi Shreedhar and George Varghese paper
&amp;ldquo;&lt;em&gt;Efficient fair queuing using deficit round-robin&lt;/em&gt;&amp;rdquo; [1]. While the session was
not so much about the relatively simple algorithmic details of
deficit-round-robin (still worth checking out) we talked about:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Its benefits over basic FIFO queuing and thus its impact for congestion
controlled traffic (tcp) compared to not congestion controlled traffic (udp).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Its wide deployment still seen today.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Its derivatives DRR+ and DRR++ being able to handle both best-effort as well
as latency critical flows.&lt;/p&gt;</description>
    </item>
    <item>
      <title>24th DistSys Reading Group - BBR Congestion-Based Congestion Control</title>
      <link>https://max-inden.de/post/2020-04-06-24th-paper-club/</link>
      <pubDate>Mon, 06 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://max-inden.de/post/2020-04-06-24th-paper-club/</guid>
      <description>&lt;p&gt;After a bit of a break due to current pandemic we decided to carry on and
continue our meetings as virtual calls. Ignoring the usual initial hiccups and
the missing whiteboard the medium worked well for us.&lt;/p&gt;
&lt;p&gt;Topic and reading of this session was the ACM Queue article &lt;a href=&#34;https://queue.acm.org/detail.cfm?id=3022184&#34;&gt;&lt;em&gt;BBR:
Congestion-Based Congestion
Control&lt;/em&gt;&lt;/a&gt; [1], as well as the
Dropbox article &lt;a href=&#34;https://dropbox.tech/infrastructure/evaluating-bbrv2-on-the-dropbox-edge-network&#34;&gt;&lt;em&gt;Evaluating BBRv2 on the Dropbox Edge
Network&lt;/em&gt;&lt;/a&gt;
[2].&lt;/p&gt;
&lt;p&gt;We started off with a quick recap of the previous session covering why we need
congestion control, how one can view a multi-hop connection as a single hop
connection with a single bottleneck and most importantly the fact that the
Internet is the largest distributed system that most of the time &amp;ldquo;just works&amp;rdquo;
due to congestion control.&lt;/p&gt;</description>
    </item>
    <item>
      <title>23rd Distributed Systems Paper Club</title>
      <link>https://max-inden.de/post/2020-02-18-23rd-paper-club/</link>
      <pubDate>Tue, 18 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://max-inden.de/post/2020-02-18-23rd-paper-club/</guid>
      <description>&lt;p&gt;At the end of the previous session one of us suggested to dive into congestion
control algorithms. This has found a greater echo, thus the 23rd session covered
congestion control algorithms in general and TCP&amp;rsquo;s Reno as well as TCP&amp;rsquo;s Tahoe
in particular.&lt;/p&gt;
&lt;p&gt;This weeks reading was:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Chapter 13 &amp;ldquo;TCP Reno and Congestion Management&amp;rdquo; from the comprehensive online
book &amp;ldquo;An Introduction to Computer Networks&amp;rdquo; [1] from the Loyola University
Chicago.&lt;/p&gt;</description>
    </item>
    <item>
      <title>22nd Distributed Systems Paper Club</title>
      <link>https://max-inden.de/post/2020-01-28-22nd-paper-club/</link>
      <pubDate>Tue, 28 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://max-inden.de/post/2020-01-28-22nd-paper-club/</guid>
      <description>&lt;p&gt;In the 22nd session we took a look at &lt;code&gt;io_uring&lt;/code&gt; - a new Kernel interface for
asynchronous I/O. Tyler, who is currently implementing an &lt;code&gt;io_uring&lt;/code&gt; library in
Rust [4] for his database sled [7] guided us through the concepts as well as a
bunch of source code.&lt;/p&gt;
&lt;p&gt;Tyler started off introducing the status quo of I/O interfaces within the Linux
Kernel like read, pread and preadv, jumped over to asynchronous I/O like aio and
eventually helped us develop a sense of what the perfect asynchronous I/O
interface of the future could look like. For alll of this he used Jens Axboe&amp;rsquo;s
slides from a Kernel Recipes 2019 talk [1].&lt;/p&gt;</description>
    </item>
    <item>
      <title>21st Distributed Systems Paper Club</title>
      <link>https://max-inden.de/post/2020-01-24-21st-paper-club/</link>
      <pubDate>Fri, 24 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://max-inden.de/post/2020-01-24-21st-paper-club/</guid>
      <description>&lt;p&gt;We started the new year with a session on &lt;em&gt;epidemic&lt;/em&gt; / &lt;em&gt;gossip&lt;/em&gt; protocols. To
decide what to read I compiled the following list of papers that I either
enjoyed reading in the past, or that were recommended to me. The &lt;em&gt;Swim (Scalable
failure detection and membership protocol)&lt;/em&gt; paper won the poll.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Das, Abhinandan, Indranil Gupta, and Ashish Motivala. &amp;ldquo;Swim: Scalable
weakly-consistent infection-style process group membership protocol.&amp;rdquo;
Proceedings International Conference on Dependable Systems and Networks. IEEE,
2002.&lt;/p&gt;</description>
    </item>
    <item>
      <title>20th Distributed Systems Paper Club</title>
      <link>https://max-inden.de/post/2019-11-28-20th-paper-club/</link>
      <pubDate>Thu, 28 Nov 2019 00:00:00 +0000</pubDate>
      <guid>https://max-inden.de/post/2019-11-28-20th-paper-club/</guid>
      <description>&lt;p&gt;Last Tuesday we meet again to discuss different attacks and possible
countermeasures for distributed hash tables. More in particular we looked at
Kademlia and its security extension S/Kademlia [1], possible eclipse attacks on
the Ethereum network [2], a novel approach of hiding its own connection buckets
as well as using an existing social graph as a network topology in the Whanau
paper[3], security extensions to the Chord DHT [4], as well as a larger study of
different security techniques for DHTs [5].&lt;/p&gt;</description>
    </item>
    <item>
      <title>19th Distributed Systems Paper Club</title>
      <link>https://max-inden.de/post/2019-10-27-19th-paper-club/</link>
      <pubDate>Sun, 27 Oct 2019 00:00:00 +0000</pubDate>
      <guid>https://max-inden.de/post/2019-10-27-19th-paper-club/</guid>
      <description>&lt;p&gt;I have been organizing a distributed systems paper reading group in Berlin for
the last year. We meet every other week discussing a paper in the distributed
systems space. This could be anything from &lt;em&gt;Chandy–Lamport&amp;rsquo;s algorithm for
global distributed snapshots&lt;/em&gt; [1] to things like &lt;em&gt;conflict free replicated
datatypes&lt;/em&gt; [2]. The event is open for anyone interested. I only ask people to
come prepared.&lt;/p&gt;
&lt;p&gt;In the last meeting (19th) we covered distributed hash tables. They play a
crucial role in e.g. decentralized file sharing networks for example as
directory services, simple key-value stores, or peer-to-peer membership
management protocols.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
